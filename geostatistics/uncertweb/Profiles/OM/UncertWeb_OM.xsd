<?xml version="1.0" encoding="UTF-8"?>
<!-- Mit XMLSpy v2011 rel. 3 (x64) (http://www.altova.com) von Christoph Stasch (Westfaelische Wilhelms-Universitaet) bearbeitet -->
<!-- edited with XMLSpy v2008 (http://www.altova.com) by Institut für Geoinformatik (Institut für Geoinformatik) -->
<!-- ============================================================= -->
<!-- === Schema defining simplified profile of O&M Observation 2.0=== -->
<!-- ============================================================= -->
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:om="http://www.opengis.net/om/2.0" xmlns:gmd="http://www.isotc211.org/2005/gmd" xmlns:un="http://www.uncertml.org/2.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sam="http://www.opengis.net/sampling/2.0" xmlns:sams="http://www.opengis.net/samplingSpatial/2.0" xmlns:swe="http://www.opengis.net/swe/2.0" targetNamespace="http://www.opengis.net/om/2.0" elementFormDefault="qualified" attributeFormDefault="unqualified" version="0.0.1">
	<annotation>
		<appinfo source="urn:opengis:specification:gml:schema-xsd:omuw:0.0.1">om_uw.xsd</appinfo>
		<documentation>OM_Obser</documentation>
	</annotation>
	<!-- =========================================================== -->
	<!-- == Imports for this profile ======= -->
	<!-- =========================================================== -->
	<import namespace="http://www.opengis.net/gml/3.2" schemaLocation="http://52north.org/schema/geostatistics/uncertweb/Profiles/GML/UncertWeb_GML.xsd"/>
	<import namespace="http://www.uncertml.org/2.0" schemaLocation="http://uncertml.org/uncertml.xsd"/>
	<import namespace="http://www.isotc211.org/2005/gmd" schemaLocation="http://52north.org/schema/geostatistics/uncertweb/Profiles/ISO_DQ/UncertWeb_DQ.xsd"/>
	<import namespace="http://www.opengis.net/samplingSpatial/2.0" schemaLocation="http://52north.org/schema/geostatistics/uncertweb/Profiles/Sampling/spatialSamplingFeature.xsd"/>
	<!--As we didn't change anything in this schema, this reference can be resolved to the OGC schema server as soon as the schemas are available there-->
	<!--<import namespace="http://www.opengis.net/swe/2.0" schemaLocation="../../schema/sweCommon/2.0/block_components.xsd"/>-->
	<!--<import namespace="http://www.isotc211.org/2005/gmd" schemaLocation="../../iso/19139/20070417/gmd/gmd.xsd"/>-->
	<!-- =========================================================== -->
	<!-- == Subset of observation.xsd for this profile ======= -->
	<!-- =========================================================== -->
	<group name="OM_CommonProperties">
		<annotation>
			<documentation>Base type for Observations. Observation is an act ("event"), whose result
				is an estimate of the value of a property of the feature of interest. The observed
				property may be any property associated with the type of the feature of interest.
				Concrete observation types must add a *result* property of a suitable type.
			</documentation>
		</annotation>
		<sequence>
			<!--<element name="type" type="gml:ReferenceType" minOccurs="0">
				<annotation>
					<documentation>If present, the sub-element 'type' shall indicate the class of
						observation. A register of type identifiers corresponding with the
						observation types in ISO 19156, which distinguishes types on the basis of
						the type of the result, is provided by OGC at
						http://www.opengis.net/def/observationType/OGC-OM/2.0/ </documentation>
				</annotation>
			</element>
			<element name="metadata" type="gmd:MD_Metadata_PropertyType" minOccurs="0">
				<annotation>
					<documentation> If present, the association Metadata shall link the
						OM_Observation to descriptive metadata. </documentation>
				</annotation>
			</element>-->
			<element name="relatedObservation" type="om:ObservationContextPropertyType" minOccurs="0" maxOccurs="unbounded">
				<annotation>
					<documentation> Some observations depend on other observations to provide
						context which is important, sometimes essential, in understanding the
						result. These dependencies are stronger than mere spatiotemporal
						coincidences, requiring explicit representation. If present, the association
						class ObservationContext (Figure 2) shall link a OM_Observation to another
						OM_Observation, with the role name relatedObservation for the target.
					</documentation>
				</annotation>
			</element>
			<element name="phenomenonTime" type="gml:TimePrimitivePropertyType">
				<annotation>
					<documentation> The attribute phenomenonTime:TM_Object shall describe the time
						that the result (6.2.2.9) applies to the property of the feature-of-interest
						(6.2.2.7). This is often the time of interaction by a sampling procedure
						(8.1.3) or observation procedure (6.2.2.10) with a real-world feature.
					</documentation>
				</annotation>
			</element>
			<element name="resultTime" type="gml:TimeInstantPropertyType">
				<annotation>
					<documentation> The attribute resultTime:TM_Instant shall describe the time when
						the result became available, typically when the procedure (6.2.2.10)
						associated with the observation was completed For some observations this is
						identical to the samplingTime. However, there are important cases where they
						differ. </documentation>
				</annotation>
			</element>
			<element name="validTime" type="gml:TimePeriodPropertyType" minOccurs="0">
				<annotation>
					<documentation> If present, the attribute validTime:TM_Period shall describe the
						time period during which the result is intended to be used. </documentation>
				</annotation>
			</element>
			<element name="procedure" type="om:OM_ProcessPropertyType">
				<annotation>
					<documentation> The association ProcessUsed shall link the OM_Observation to the
						OM_Process (6.2.3) used to generate the result. The process has the role
						procedure with respect to the observation. A process might be responsible
						for more than one generatedObservation. </documentation>
				</annotation>
			</element>
			<element name="parameter" type="om:NamedValuePropertyType" minOccurs="0" maxOccurs="unbounded">
				<annotation>
					<documentation> If present, the attributes parameter:NamedValue shall describe
						an arbitrary event-specific parameter. This might be an environmental
						parameter, an instrument setting or input, or an event-specific sampling
						parameter that is not tightly bound to either the feature-of-interest
						(6.2.2.7) or to the observation procedure (6.2.2.10). To avoid ambiguity,
						there shall be no more than one parameter with the same name. NOTE
						Parameters that are tightly bound to the procedure may be recorded as part
						of the procedure description. In some contexts the Observation::procedure
						(6.2.2.10) is a generic or standard procedure, rather than an event-specific
						process. In this context, parameters bound to the observation act, such as
						instrument settings, calibrations or inputs, local position, detection
						limits, asset identifier, operator, may augment the description of a
						standard procedure. </documentation>
				</annotation>
			</element>
			<element name="observedProperty" type="gml:ReferenceType">
				<annotation>
					<appinfo>
						<gml:targetElement>xs:anyType</gml:targetElement>
					</appinfo>
					<documentation> The association Phenomenon shall link the OM_Observation to the
						GFI_PropertyType (C.2.2) for which the OM_Observation:result (6.2.2.9)
						provides an estimate of its value. The property type has the role
						observedProperty with respect to the observation. The observed property
						shall be a phenomenon associated with the type of the featureOfInterest.
						NOTE An observed property may, but need not be modelled as a property (in
						the sense of the General Feature Model) in a formal application schema that
						defines the type of the feature of interest The observed property supports
						semantic or thematic classification of observations, which is useful for
						discovery and data fusion. </documentation>
				</annotation>
			</element>
			<!--CHANGE in UNCERTWEB: changed to gml:ReferenceType, as no inline FOIs shall be used in project-->
			<element name="featureOfInterest" type="om:foiPropertyType">
				<annotation>
					<documentation> The association Domain shall link the OM_Observation to the
						GFI_Feature (C.2.1) that is the subject of the observation and carries the
						observed property. This feature has the role featureOfInterest with respect
						to the observation. This feature is the real-world object whose properties
						are under observation, or is a feature intended to sample the real-world
						object, as described in Clause 8 of this International Standard. An
						observation instance serves as a propertyValueProvider for its feature of
						interest. </documentation>
				</annotation>
			</element>
			<!--CHANGE in UNCERTWEB: type changed to anyType due to circular references between GML and GMD-->
			<element name="resultQuality" type="gmd:DQ_Element_PropertyType" minOccurs="0" maxOccurs="unbounded">
				<annotation>
					<documentation> If present, the attributes resultQuality:DQ_Element shall
						describe the quality of the result (6.2.2.9). This instance-specific
						description complements the description of the observation procedure
						(6.2.2.10), which provides information concerning the quality of all
						observations using this procedure. Quality of a result may be assessed
						following the procedures in ISO 19114:2003. Multiple measures may be
						provided (ISO/TS 19138:2006). </documentation>
				</annotation>
			</element>
		</sequence>
	</group>
	<!-- ====================================================================== -->
	<!-- ===== Generic Observation result ======= -->
	<!-- ===== global element in order to support restriction across namespace boundaries ======= -->
	<!-- ====================================================================== -->
	<element name="OM_MeasurementCollection">
		<complexType>
			<sequence>
				<element ref="om:OM_Measurement" maxOccurs="unbounded"/>
			</sequence>
			<attribute ref="gml:id"/>
		</complexType>
	</element>
	<element name="OM_ObservationCollection">
		<complexType>
			<sequence>
				<element ref="om:OM_Observation" maxOccurs="unbounded"/>
			</sequence>
			<attribute ref="gml:id"/>
		</complexType>
	</element>
	<element name="OM_DiscreteNumericObservationCollection">
		<complexType>
			<sequence>
				<element ref="om:OM_DiscreteNumericObservation" maxOccurs="unbounded"/>
			</sequence>
			<attribute ref="gml:id"/>
		</complexType>
	</element>
	<element name="OM_BooleanObservationCollection">
		<complexType>
			<sequence>
				<element ref="om:OM_BooleanObservation" maxOccurs="unbounded"/>
			</sequence>
			<attribute ref="gml:id"/>
		</complexType>
	</element>
	<element name="OM_CategoryObservationCollection">
		<complexType>
			<sequence>
				<element ref="om:OM_CategoryObservation" maxOccurs="unbounded"/>
			</sequence>
			<attribute ref="gml:id"/>
		</complexType>
	</element>
	<element name="OM_TextObservationCollection">
		<complexType>
			<sequence>
				<element ref="om:OM_TextObservation" maxOccurs="unbounded"/>
			</sequence>
			<attribute ref="gml:id"/>
		</complexType>
	</element>
	<element name="OM_UncertaintyObservationCollection">
		<complexType>
			<sequence>
				<element ref="om:OM_UncertaintyObservation" maxOccurs="unbounded"/>
			</sequence>
			<attribute ref="gml:id"/>
		</complexType>
	</element>
	<element name="OM_ReferenceObservationCollection">
		<complexType>
			<sequence>
				<element ref="om:OM_ReferenceObservation" maxOccurs="unbounded"/>
			</sequence>
			<attribute ref="gml:id"/>
		</complexType>
	</element>
	<complexType name="OM_ObservationPropertyType">
		<sequence>
			<element ref="om:OM_Observation"/>
		</sequence>
	</complexType>
	<!-- ====================================================================== -->
	<!-- ===== Generic Observation ======= -->
	<!-- ====================================================================== -->
	<complexType name="OM_AbstractObservationType" abstract="true">
		<complexContent>
			<extension base="gml:AbstractFeatureType">
				<sequence>
					<group ref="om:OM_CommonProperties"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<!--====Measurement====-->
	<complexType name="UW_MeasurementType">
		<annotation>
			<documentation> Observation whose result is continuous numerical measurement.
			</documentation>
		</annotation>
		<complexContent>
			<extension base="om:OM_AbstractObservationType">
				<sequence>
					<element name="result" type="gml:MeasureType"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<element name="OM_Measurement" type="om:UW_MeasurementType" substitutionGroup="om:OM_Observation"/>
	<!--====DiscreteNumericObservation====-->
	<complexType name="UW_DiscreteNumericObservationType">
		<annotation>
			<documentation> Observation whose result is a discrete numerical measurement.
			</documentation>
		</annotation>
		<complexContent>
			<extension base="om:OM_AbstractObservationType">
				<sequence>
					<element name="result" type="integer"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<element name="OM_DiscreteNumericObservation" type="om:UW_DiscreteNumericObservationType" substitutionGroup="om:OM_Observation"/>
	<!--====Boolean Observation====-->
	<complexType name="UW_BooleanObservationType">
		<annotation>
			<documentation> Observation whose result is a boolean value.
			</documentation>
		</annotation>
		<complexContent>
			<extension base="om:OM_AbstractObservationType">
				<sequence>
					<element name="result" type="boolean"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<element name="OM_BooleanObservation" type="om:UW_BooleanObservationType" substitutionGroup="om:OM_Observation"/>
	<!--====CategoryObservation====-->
	<complexType name="UW_CategoryObservationType">
		<annotation>
			<documentation> Observation whose result is a freetext value.
			</documentation>
		</annotation>
		<complexContent>
			<extension base="om:OM_AbstractObservationType">
				<sequence>
					<element name="result" type="gml:CodeType"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<element name="OM_CategoryObservation" type="om:UW_CategoryObservationType" substitutionGroup="om:OM_Observation"/>
	<!--====TextObservation====-->
	<complexType name="UW_TextObservationType">
		<annotation>
			<documentation> Observation whose result is a freetext value.
			</documentation>
		</annotation>
		<complexContent>
			<extension base="om:OM_AbstractObservationType">
				<sequence>
					<element name="result" type="string"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<element name="OM_TextObservation" type="om:UW_TextObservationType" substitutionGroup="om:OM_Observation"/>
	<!--====Uncertainty Observation====-->
	<complexType name="UW_UncertaintyObservationType">
		<annotation>
			<documentation> Observation whose result is an Uncertainty value encoded as UncertML.
			</documentation>
		</annotation>
		<complexContent>
			<extension base="om:OM_AbstractObservationType">
				<sequence>
					<element name="result" type="gml:UncertaintyPropertyType"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<element name="OM_UncertaintyObservation" type="om:UW_UncertaintyObservationType" substitutionGroup="om:OM_Observation"/>
	<!--====Reference Observation====-->
	<complexType name="UW_ReferenceObservationType">
		<annotation>
			<documentation> Observation whose result is an reference to another file.
			</documentation>
		</annotation>
		<complexContent>
			<extension base="om:OM_AbstractObservationType">
				<sequence>
					<element name="result" type="gml:ReferenceType"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<element name="OM_ReferenceObservation" type="om:UW_ReferenceObservationType" substitutionGroup="om:OM_Observation"/>
	<element name="OM_Observation" type="om:OM_AbstractObservationType" abstract="true"/>
	<!-- ......................... 
	<element name="OM_Observation" type="om:OM_ObservationType" substitutionGroup="gml:AbstractFeature">
		<annotation>
			<documentation>Observation is an act ("event"), whose result is an estimate of the value
				of a property of the feature of interest. The observed property may be any property
				associated with the type of the feature of interest.</documentation>
		</annotation>
	</element>-->
	<!-- ...................... -->
	<!-- ====================================================================== -->
	<!-- ===== Observation Context  ======= -->
	<!-- ====================================================================== -->
	<complexType name="ObservationContextType">
		<annotation>
			<documentation> Some observations depend on other observations to provide context which
				is important, sometimes essential, in understanding the result. These dependencies
				are stronger than mere spatiotemporal coincidences, requiring explicit
				representation. If present, the association class ObservationContext (Figure 2)
				shall link a OM_Observation to another OM_Observation, with the role name
				relatedObservation for the target. </documentation>
		</annotation>
		<sequence>
			<element name="role" type="gml:ReferenceType">
				<annotation>
					<documentation>The attribute 'role' shall describe the relationship of
						the target OM_Observation to the source OM_Observation. </documentation>
				</annotation>
			</element>
			<element name="relatedObservation" type="gml:ReferenceType">
				<annotation>
					<appinfo>
						<gml:targetElement>om:OM_Observation</gml:targetElement>
					</appinfo>
					<documentation> Some observations depend on other observations to provide
						context which is important, sometimes essential, in understanding the
						result. These dependencies are stronger than mere spatiotemporal
						coincidences, requiring explicit representation. If present, the association
						class ObservationContext (Figure 2) shall link a OM_Observation to another
						OM_Observation, with the role name relatedObservation for the target.
					</documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<!-- ......................... -->
	<element name="ObservationContext" type="om:ObservationContextType">
		<annotation>
			<documentation> Some observations depend on other observations to provide context which
				is important, sometimes essential, in understanding the result. These dependencies
				are stronger than mere spatiotemporal coincidences, requiring explicit
				representation. If present, the association class ObservationContext (Figure 2)
				shall link a OM_Observation to another OM_Observation, with the role name
				relatedObservation for the target. </documentation>
		</annotation>
	</element>
	<!-- ...................... -->
	<complexType name="ObservationContextPropertyType">
		<annotation>
			<documentation>ObservationContext is a dataType, without identity, so may only be used
				inline</documentation>
		</annotation>
		<sequence>
			<element ref="om:ObservationContext"/>
		</sequence>
	</complexType>
	<!-- ====================================================================== -->
	<!-- ===== Observation process  ======= -->
	<!-- ====================================================================== -->
	<element name="OM_Process" abstract="true">
		<annotation>
			<documentation>OM_Process is abstract, and has no attributes, operations or associations. It serves as the base class for observation processes. The purpose of an observation process is to generate an observation result. An instance of OM_Process is often an instrument or sensor, but may be a human observer, a simulator, or a process or algorithm applied to more primitive results used as inputs. 
				
				NOTE	ISO 19115-2:2008 provides MI_Instrument, LE_Processing and LE_Algorithm, which could all be modelled as specializations of OM_Process. OGC SensorML [10] provides a model which is suitable for many observation procedures. </documentation>
		</annotation>
	</element>
	<!-- ...................... -->
	<complexType name="OM_ProcessPropertyType">
		<annotation>
			<documentation>OM_Process is abstract, and has no attributes, operations or associations. It serves as the base class for observation processes. The purpose of an observation process is to generate an observation result. An instance of OM_Process is often an instrument or sensor, but may be a human observer, a simulator, or a process or algorithm applied to more primitive results used as inputs. 
				
				NOTE	ISO 19115-2:2008 provides MI_Instrument, LE_Processing and LE_Algorithm, which could all be modelled as specializations of OM_Process. OGC SensorML [10] provides a model which is suitable for many observation procedures. </documentation>
		</annotation>
		<sequence minOccurs="0">
			<element ref="om:OM_Process"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ====================================================================== -->
	<!-- ===== Named Value  ======= -->
	<!-- ====================================================================== -->
	<complexType name="NamedValueType">
		<annotation>
			<documentation> The class 'NamedValue' provides for a generic soft-typed parameter value.
				NamedValue shall support two attributes. </documentation>
		</annotation>
		<sequence>
			<element name="name" type="gml:ReferenceType">
				<annotation>
					<documentation> The attribute 'name' shall indicate the meaning of the
						named value. Its value should be taken from a well-governed source if
						possible. </documentation>
				</annotation>
			</element>
			<element name="value">
				<annotation>
					<documentation> The attribute 'value' shall provide the value. The type Any
						should be substituted by a suitable concrete type, such as
						CI_ResponsibleParty or Measure. </documentation>
				</annotation>
			</element>
		</sequence>
	</complexType>
	<!-- ......................... -->
	<element name="NamedValue" type="om:NamedValueType">
		<annotation>
			<documentation> The class 'NamedValue' provides for a generic soft-typed parameter value.
				NamedValue shall support two attributes. </documentation>
		</annotation>
	</element>
	<!-- ...................... -->
	<complexType name="NamedValuePropertyType">
		<sequence minOccurs="0">
			<element ref="om:NamedValue"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<!-- ====================================================================== -->
	<!-- ===== TimeObjectProperty  ======= -->
	<!-- ====================================================================== -->
	<complexType name="TimeObjectPropertyType">
		<annotation>
			<documentation>This property type is not provided directly by GML</documentation>
		</annotation>
		<sequence minOccurs="0">
			<element ref="gml:AbstractTimeObject"/>
		</sequence>
		<attributeGroup ref="gml:AssociationAttributeGroup"/>
	</complexType>
	<complexType name="RelatedTimeType">
		<annotation>
			<documentation>gml:RelatedTimeType provides a content model for indicating the relative position of an arbitrary member of the substitution group whose head is gml:AbstractTimePrimitive. It extends the generic gml:TimePrimitivePropertyType with an XML attribute relativePosition, whose value is selected from the set of 13 temporal relationships identified by Allen (1983)</documentation>
		</annotation>
		<complexContent>
			<extension base="gml:TimePrimitivePropertyType">
				<attribute name="relativePosition">
					<simpleType>
						<restriction base="string">
							<enumeration value="Before"/>
							<enumeration value="After"/>
							<enumeration value="Begins"/>
							<enumeration value="Ends"/>
							<enumeration value="During"/>
							<enumeration value="Equals"/>
							<enumeration value="Contains"/>
							<enumeration value="Overlaps"/>
							<enumeration value="Meets"/>
							<enumeration value="OverlappedBy"/>
							<enumeration value="MetBy"/>
							<enumeration value="BegunBy"/>
							<enumeration value="EndedBy"/>
						</restriction>
					</simpleType>
				</attribute>
			</extension>
		</complexContent>
	</complexType>
	<!-- ====================================================================== -->
	<!-- ===== Additional elements and types defined in this profile  ======= -->
	<!-- ====================================================================== -->
	<complexType name="foiPropertyType">
		<complexContent>
			<extension base="gml:ReferenceType">
				<sequence>
					<element ref="sams:SF_SpatialSamplingFeature" minOccurs="0"/>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
</schema>
